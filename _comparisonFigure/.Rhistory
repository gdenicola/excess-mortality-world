#clear environment
rm(list=ls())
#set directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#set R system language to english
Sys.setenv(LANG = "en")
#load necessary packages
library(gdata)
library(readxl)
library(dplyr)
#read in mortality table
lifeTable_avg <- read.xls("Data/mortality_ntl_avg.xlsx")
lifeTable_2015 <- read.xls("Data/mortality_ntl_2015.xlsx")
lifeTable_2019 <- read.xls("Data/mortality_ntl_2019.xlsx")
#clear environment
rm(list=ls())
#set directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#set R system language to english
Sys.setenv(LANG = "en")
#load necessary packages
library(gdata)
library(readxl)
library(dplyr)
#read in mortality table
lifeTable_avg <- read.xls("Data/mortality_ntl_avg.xlsx")
lifeTable_2015 <- read.xls("Data/mortality_ntl_2015.xlsx")
#clear environment
rm(list=ls())
#set directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load necessary packages
library(gdata)
library(readxl)
library(dplyr)
#read in mortality table
lifeTable_avg <- read.xls("Data/mortality_ntl_avg.xlsx")
lifeTable_2015 <- read.xls("Data/mortality_ntl_2015.xlsx")
#clear environment
rm(list=ls())
#set directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#set R system language to english
Sys.setenv(LANG = "en")
#load necessary packages
library(ggpubr)
library(tidyverse)
library(readxl)
#import expected mortality for Netherlands (produced with "expected_country.R"):
exp.Netherlands.avg <- read.table("Data/Data_Netherlands_avg")
exp.Netherlands.2015 <- read.table("Data/Data_Netherlands_2015")
exp.Netherlands.2019 <- read.table("Data/Data_Netherlands_2019")
#preprocess data for plotting with ggplot
exp.Netherlands.avg.grouped <- group_by(exp.Netherlands.avg,year)
exp.Netherlands.avg.grouped <- summarise(exp.Netherlands.avg.grouped,sum(expected))
exp.Netherlands.2015.grouped <- group_by(exp.Netherlands.2015,year)
exp.Netherlands.2015.grouped <- summarise(exp.Netherlands.2015.grouped,sum(expected))
exp.Netherlands.2019.grouped <- group_by(exp.Netherlands.2019,year)
exp.Netherlands.2019.grouped <- summarise(exp.Netherlands.2019.grouped,sum(expected))
#input observed mortality figures by year (2015 to 2021):
ist.tod <- c(147134, 148997, 150214, 153363, 151885, 168678, 170972)
#build the long-format dataframe for plotting
Year <-  seq(2015,2021,by=1)
df_all_ungrouped <- cbind.data.frame(Year,Deaths = exp.Netherlands.avg.grouped$`sum(expected)`,
exp.upper = exp.Netherlands.2015.grouped$`sum(expected)`,
exp.lower = exp.Netherlands.2019.grouped$`sum(expected)`
)
df_long <- pivot_longer(df_all_ungrouped,cols = 2:4,
names_to = "type", values_to = "expected")
#produce plot
plot_Netherlands <- ggplot(df_all_ungrouped, aes(Year)) +
geom_line(aes(y=Deaths), size = 2,linetype = "longdash", col="#619CFF") +
geom_point(aes(y=Deaths), size = 5,shape=15, col="#619CFF") +
geom_ribbon(aes(ymin=exp.upper, ymax=exp.lower), fill="#619CFF", alpha=0.2) +
geom_point(y=ist.tod,col="black",size = 7) +
theme_pubr(base_size = 20) +
ggtitle("Expected versus observed yearly deaths - Netherlands") +
scale_y_continuous(breaks = seq(130000, 170000, 10000),limits = c(135000,175000)) +
scale_x_continuous(breaks = seq(2015,2021,1),limits = c(2015,2021))
#view plot
plot_Netherlands
#save plot in directory
ggsave("Netherlands.png",width = 10,height = 7)
######## CALCULATING EXCESS MORTALITY #############
## AVERAGE 2015-2019 ##
#Calculate % excess 2020:
(expected_2020 <- df_long$expected[16])
(observed_2020 <- ist.tod[6])
(excess_2020 <- observed_2020 - expected_2020)
(percentage_2020 <- excess_2020 / expected_2020)
#Calculate % excess 2021:
(expected_2021 <- df_long$expected[19])
(observed_2021 <- ist.tod[7])
(excess_2021 <- observed_2021 - expected_2021)
(percentage_2021 <- excess_2021 / expected_2021)
#Calculate % excess overall:
(expected <- expected_2020 + expected_2021)
(observed <- observed_2020 + observed_2021)
(excess <- observed - expected)
(percentage <- excess / expected)
## LOWER BOUND ##
#Calculate % excess 2020:
(upper_2020 <- df_long$expected[17])
(observed_2020 <- ist.tod[6])
(lower_excess_2020 <- observed_2020 - upper_2020)
(percentage_lower_2020 <- lower_excess_2020 / upper_2020)
#Calculate % excess 2021:
(upper_2021 <- df_long$expected[20])
(observed_2021 <- ist.tod[7])
(lower_excess_2021 <- observed_2021 - upper_2021)
(percentage_lower_2021 <- lower_excess_2021 / upper_2021)
#Calculate % excess overall:
(upper_expected <- upper_2020 + upper_2021)
(observed <- observed_2020 + observed_2021)
(lower_excess <- observed - upper_expected)
(percentage_lower <- lower_excess / upper_expected)
## UPPER BOUND ##
#Calculate % excess 2020:
(lower_2020 <- df_long$expected[18])
(observed_2020 <- ist.tod[6])
(upper_excess_2020 <- observed_2020 - lower_2020)
(percentage_upper_2020 <- upper_excess_2020 / lower_2020)
#Calculate % excess 2021:
(lower_2021 <- df_long$expected[21])
(observed_2021 <- ist.tod[7])
(upper_excess_2021 <- observed_2021 - lower_2021)
(percentage_upper_2021 <- upper_excess_2021 / lower_2021)
#Calculate % excess overall:
(lower_expected <- lower_2020 + lower_2021)
(observed <- observed_2020 + observed_2021)
(upper_excess <- observed - lower_expected)
(percentage_upper <- upper_excess / lower_expected)
#clear environment
rm(list=ls())
#set directory to current file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#set R system language to english
Sys.setenv(LANG = "en")
#load necessary packages
library(ggpubr)
library(tidyverse)
library(readxl)
#import expected mortality for Taiwan (produced with "expected_country.R"):
exp.Taiwan.avg <- read.table("Data/Data_Taiwan_avg")
exp.Taiwan.2016 <- read.table("Data/Data_Taiwan_2016")
exp.Taiwan.2019 <- read.table("Data/Data_Taiwan_2019")
#preprocess data for plotting with ggplot
exp.Taiwan.avg.grouped <- group_by(exp.Taiwan.avg,year)
exp.Taiwan.avg.grouped <- summarise(exp.Taiwan.avg.grouped,sum(expected))
exp.Taiwan.2016.grouped <- group_by(exp.Taiwan.2016,year)
exp.Taiwan.2016.grouped <- summarise(exp.Taiwan.2016.grouped,sum(expected))
exp.Taiwan.2019.grouped <- group_by(exp.Taiwan.2019,year)
exp.Taiwan.2019.grouped <- summarise(exp.Taiwan.2019.grouped,sum(expected))
#input observed mortality figures by year (2016 to 2021):
ist.tod <- c(163574, 172418, 171857, 172859, 175424, 173067, 184172)
#build the long-format dataframe for plotting
Year <-  seq(2015,2021,by=1)
df_all_ungrouped <- cbind.data.frame(Year,Deaths = exp.Taiwan.avg.grouped$`sum(expected)`,
exp.upper = exp.Taiwan.2016.grouped$`sum(expected)`,
exp.lower = exp.Taiwan.2019.grouped$`sum(expected)`
)
df_long <- pivot_longer(df_all_ungrouped,cols = 2:4,
names_to = "type", values_to = "expected")
#produce plot
plot_Taiwan <- ggplot(df_all_ungrouped, aes(Year)) +
geom_line(aes(y=Deaths), size = 2,linetype = "longdash", col="#619CFF") +
geom_point(aes(y=Deaths), size = 5,shape=15, col="#619CFF") +
geom_ribbon(aes(ymin=exp.upper, ymax=exp.lower), fill="#619CFF", alpha=0.2) +
geom_point(y=ist.tod,col="black",size = 7) +
theme_pubr(base_size = 20) +
ggtitle("Expected versus observed yearly deaths - Taiwan") +
scale_y_continuous(breaks = seq(150000, 200000, 10000),limits = c(148000,206000)) +
scale_x_continuous(breaks = seq(2015,2021,1),limits = c(2015,2021))
#view plot
plot_Taiwan
#save plot in directory
ggsave("Taiwan.png",width = 10,height = 7)
######## CALCULATING EXCESS MORTALITY #############
## AVERAGE 2015-2019 ##
#Calculate % excess 2020:
(expected_2020 <- df_long$expected[16])
(observed_2020 <- ist.tod[6])
(excess_2020 <- observed_2020 - expected_2020)
(percentage_2020 <- excess_2020 / expected_2020)
#Calculate % excess 2021:
(expected_2021 <- df_long$expected[19])
(observed_2021 <- ist.tod[7])
(excess_2021 <- observed_2021 - expected_2021)
(percentage_2021 <- excess_2021 / expected_2021)
#Calculate % excess overall:
(expected <- expected_2020 + expected_2021)
(observed <- observed_2020 + observed_2021)
(excess <- observed - expected)
(percentage <- excess / expected)
## LOWER BOUND ##
#Calculate % excess 2020:
(upper_2020 <- df_long$expected[17])
(observed_2020 <- ist.tod[6])
(lower_excess_2020 <- observed_2020 - upper_2020)
(percentage_lower_2020 <- lower_excess_2020 / upper_2020)
#Calculate % excess 2021:
(upper_2021 <- df_long$expected[20])
(observed_2021 <- ist.tod[7])
(lower_excess_2021 <- observed_2021 - upper_2021)
(percentage_lower_2021 <- lower_excess_2021 / upper_2021)
#Calculate % excess overall:
(upper_expected <- upper_2020 + upper_2021)
(observed <- observed_2020 + observed_2021)
(lower_excess <- observed - upper_expected)
(percentage_lower <- lower_excess / upper_expected)
## UPPER BOUND ##
#Calculate % excess 2020:
(lower_2020 <- df_long$expected[18])
(observed_2020 <- ist.tod[6])
(upper_excess_2020 <- observed_2020 - lower_2020)
(percentage_upper_2020 <- upper_excess_2020 / lower_2020)
#Calculate % excess 2021:
(lower_2021 <- df_long$expected[21])
(observed_2021 <- ist.tod[7])
(upper_excess_2021 <- observed_2021 - lower_2021)
(percentage_upper_2021 <- upper_excess_2021 / lower_2021)
#Calculate % excess overall:
(lower_expected <- lower_2020 + lower_2021)
(observed <- observed_2020 + observed_2021)
(upper_excess <- observed - lower_expected)
(percentage_upper <- upper_excess / lower_expected)
rm(list=ls()) # clear environment
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set directory to current
library(readxl)
library(tidyverse)
library(ggpubr)
rm(list=ls()) # clear environment
#load table from excel
comparison_table <- read_excel("comparison_table.xlsx")
#order table as in paper
comparison_table <- comparison_table[order(comparison_table$`De Nicola & Kauermann`),]
#format table and variables for ggplot
table_long <- pivot_longer(comparison_table,cols = 2:7, names_to = "Method", values_to = "Excess")
table_long$Method <- factor(table_long$Method, levels = c("De Nicola & Kauermann", "Levitt et al.", "Economist", "IHME", "WMD", "WHO"))
table_long$Country <- factor(table_long$Country, levels = comparison_table$Country)
#define vector of colours for the bars
colours <- c("darkorange","brown3", "chartreuse3", "goldenrod1", "skyblue1","blue3")
#produce plot
ggplot(table_long, aes(fct_rev(Country), Excess)) +
geom_bar(aes(fill = Method), position = "dodge", stat="identity") +
coord_flip() +
guides(fill = guide_legend(reverse = TRUE)) +
theme_pubclean(base_size = 19) +
theme(legend.key.size = unit(1, 'cm')) +
xlab("Country") +
ylab("Excess Mortality") +
scale_fill_manual(values= colours) +
scale_y_continuous(labels = scales::percent, breaks = c(-0.15,-0.10, -0.05, 0.00, 0.05, 0.10, 0.15, 0.20, 0.25))
ggsave("_comparison.pdf",width = 10, height = 14.5)
